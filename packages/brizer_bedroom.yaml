# Пакет для управления бризером Тион с интеграцией ESPHOME из интерфейса Home Assistant

# 1. Сделайте "Поиск и замену" по файлу всех вхождений строки "brizer_bedroom" на имя вашего climate устройства бризера
# Обратите внимание, ВСЕ вхождения brizer_bedroom необходимо заменить на новое имя вашего устройства.
# Если устройств у вас несколько - сделайте несколько файлов, каждый со своим устройством.

# 2. Добавьте в секцию homeassistant файла /homeassistant/configuration.yaml директиву packages с указанием каталога с пакетами
# Пример:
# homeassistant:
#   packages: !include_dir_merge_named includes/packages

# 3. Добавьте секцию logger в файл /homeassistant/configuration.yaml и включите отладочные сообщения для custom_components.tion
# Пример:
# logger:
#   default: warning
#   logs:
#     custom_components.tion: debug
    
# 4. Выложите файл или файлы в созданный каталог с пакетами HA, например /homeassistant/includes/packages

# 5. Перезагрузите Home Assistant и проверьте, что все объекты описанные в файлах появились в  Home Assistant

climate_devices_brizer_kitchen:

  homeassistant:
    customize:
      switch.brizer_kitchen_power_mode:
        templates:
          icon_color: >
            if (state == 'on') return 'var(--green-color)'; 
            return 'var(--red-color)';

      switch.brizer_kitchen_heater_mode:
        templates:
          icon_color: >
            if (state == 'on') return 'var(--state-climate-heat-color)';

  input_boolean:

    # Элементы для установки диапазона скоростей бризера из интерфейса

    brizer_kitchen_speed0:
      name: "Скорость 0"
      icon: mdi:numeric-0-box-outline
    brizer_kitchen_speed1:
      name: "Скорость 1"
      icon: mdi:numeric-1-box-outline
    brizer_kitchen_speed2:
      name: "Скорость 2"
      icon: mdi:numeric-2-box-outline
    brizer_kitchen_speed3:
      name: "Скорость 3"
      icon: mdi:numeric-3-box-outline
    brizer_kitchen_speed4:
      name: "Скорость 4"
      icon: mdi:numeric-4-box-outline
    brizer_kitchen_speed5:
      name: "Скорость 5"
      icon: mdi:numeric-5-box-outline
    brizer_kitchen_speed6:
      name: "Скорость 6"
      icon: mdi:numeric-6-box-outline

    # Переменная включается, когда в интерфейсе выбрана первая (минимальная) скорость и показывает, что следующим кликом будет устанавливаться максимальная скорость.
    # Переменная сбрасывается после установки второй скорости, либо по таймеру timer.brizer_kitchen_set_speed_n_m.

    brizer_kitchen_set_speed_n_m:
      initial: "off"

  timer:

    # Таймер времени на установку второй скорости в интерфейсе. По окончанию таймера результат установки скоростей отправляется на бризер.
    # Если была установлена только первая скорость - бризер переводится в ручной режим с этой скоростью.
    # Если за время таймера была установлена также вторая скорость - бризер переводится в автоматический режим с указанным диапазоном скоростей.

    brizer_kitchen_set_speed_n_m:
      duration: "00:00:03"

  template: 

    # Сенсор истории режимов работы бризера в формате '1-2:750'

    - sensor:
        - name: brizer_kitchen_status
          unique_id: brizer_kitchen_status
          state: >
            {% if is_state('switch.brizer_kitchen_auto_fan_mode','on') %}
                {{ states('number.brizer_kitchen_min_fan_speed') | int(none) }}-{{ states('number.brizer_kitchen_max_fan_speed') | int(none) }}:{{ states('number.brizer_kitchen_target_co2') | int(none) }}
            {% elif is_state('climate.brizer_kitchen','off') %}
                0
            {% else %}
                {{ states('sensor.brizer_kitchen_fan_speed') | int(none) }}
            {% endif %}
          icon: >
            {% if is_state('switch.brizer_kitchen_auto_fan_mode','on') %}
                mdi:fan-auto
            {% elif is_state('climate.brizer_kitchen','off') %}
                mdi:fan-off
            {% else %}
                mdi:fan
            {% endif %}
          # Автообновление сенсора каждый час, чтобы не пропадали графики
          attributes:
            hour_last_updated: "{{ now().hour }}"

  script:

    # Скрипт on_tap для запуска установки диапазона скоростей бризера из интерфейса

    brizer_kitchen_set_speed_on_tap:
      mode: queued
      sequence:
        - choose:
            # Выбираем первую скорость
            - conditions: "{{ is_state('input_boolean.brizer_kitchen_set_speed_n_m','off') }}"
              sequence:
                # Включаем признак процесса установки скоростей
                - service: input_boolean.turn_on
                  entity_id: input_boolean.brizer_kitchen_set_speed_n_m
                  
                - service: input_boolean.turn_off
                  entity_id:
                    - input_boolean.brizer_kitchen_speed0
                    - input_boolean.brizer_kitchen_speed1
                    - input_boolean.brizer_kitchen_speed2
                    - input_boolean.brizer_kitchen_speed3
                    - input_boolean.brizer_kitchen_speed4
                    - input_boolean.brizer_kitchen_speed5
                    - input_boolean.brizer_kitchen_speed6

                - service: input_boolean.turn_on
                  data_template:
                    entity_id: '{{ entity_id }}'
          
                # Запускаем таймер автоматической финализации установки скоростей
                - service: timer.start
                  entity_id: timer.brizer_kitchen_set_speed_n_m

          default:
          # Выбираем вторую скорость
            - service: input_boolean.turn_on
              data_template:
                entity_id: '{{ entity_id }}'
            
            # Принудительно финализируем установку скоростей
            - service: timer.finish
              entity_id: timer.brizer_kitchen_set_speed_n_m

  automation:

    # Финализация установки скорости/диапазона скоростей из интерфейса

    - alias: brizer_kitchen_set_speed
      id: brizer_kitchen_set_speed
      mode: queued
      trigger:
        - platform: event
          event_type: timer.finished
          event_data:
            entity_id: timer.brizer_kitchen_set_speed_n_m
      action:
        - service: number.set_value
          data:
            entity_id: 
              - number.brizer_kitchen_min_fan_speed
              - number.brizer_kitchen_max_fan_speed
            value: >
              {% if   is_state('input_boolean.brizer_kitchen_speed0','on') %}
                0
              {% elif is_state('input_boolean.brizer_kitchen_speed1','on') %}
                1
              {% elif is_state('input_boolean.brizer_kitchen_speed2','on') %}
                2
              {% elif is_state('input_boolean.brizer_kitchen_speed3','on') %}
                3
              {% elif is_state('input_boolean.brizer_kitchen_speed4','on') %}
                4
              {% elif is_state('input_boolean.brizer_kitchen_speed5','on') %}
                5
              {% elif is_state('input_boolean.brizer_kitchen_speed6','on') %}
                6
              {% else %}
                0
              {% endif %}

        - service: number.set_value
          data:
            entity_id: number.brizer_kitchen_max_fan_speed
            value: >
              {% if   is_state('input_boolean.brizer_kitchen_speed6','on') %}
                6
              {% elif is_state('input_boolean.brizer_kitchen_speed5','on') %}
                5
              {% elif is_state('input_boolean.brizer_kitchen_speed4','on') %}
                4
              {% elif is_state('input_boolean.brizer_kitchen_speed3','on') %}
                3
              {% elif is_state('input_boolean.brizer_kitchen_speed2','on') %}
                2
              {% elif is_state('input_boolean.brizer_kitchen_speed1','on') %}
                1
              {% else %}
                0
              {% endif %}

        # Задержка для установки переменных number.brizer_kitchen_min_fan_speed, number.brizer_kitchen_max_fan_speed
        - delay: 1

        - service: system_log.write
          data:
            message: >-
              brizer_kitchen_set_speed: "{{ states('number.brizer_kitchen_min_fan_speed')|int(none) }}-{{ states('number.brizer_kitchen_max_fan_speed')|int(none) }}"
            level: info
            logger: custom_components.tion.automation

        - choose:
            # Выключение автоматического режима, если скорости одинаковые
            - conditions: >
                {% set min_speed = states('number.brizer_kitchen_min_fan_speed')|int(none) %}
                {% set max_speed = states('number.brizer_kitchen_max_fan_speed')|int(none) %}
                {{ min_speed|is_number and max_speed|is_number and min_speed == max_speed }}
                
              sequence:
                - service: switch.turn_off
                  entity_id: switch.brizer_kitchen_auto_fan_mode

                - choose:                
                    - conditions: "{{ states('number.brizer_kitchen_min_fan_speed')|int(-1) > 0 }}"
                      sequence:
                        - service: switch.turn_on
                          entity_id: switch.brizer_kitchen_power_mode

                        - service: climate.set_fan_mode
                          target:
                            entity_id: climate.brizer_kitchen
                          data:
                            fan_mode: "{{ states('number.brizer_kitchen_min_fan_speed')|int(none) }}"
                            
                  default:
                    - service: switch.turn_off
                      entity_id: switch.brizer_kitchen_power_mode

                - service: system_log.write
                  data:
                    message: >-
                      brizer_kitchen_set_speed: "{{ states('number.brizer_kitchen_min_fan_speed')|int(none) }}"
                    level: info
                    logger: custom_components.tion.automation

          default:
            # Включение автоматического режима, если минимальная и максимальная скорости отличаются
            - service: switch.turn_on
              entity_id: switch.brizer_kitchen_power_mode

            - service: switch.turn_on
              entity_id: switch.brizer_kitchen_auto_fan_mode

            - service: system_log.write
              data:
                message: >-
                  brizer_kitchen_set_speed: auto "{{ states('number.brizer_kitchen_min_fan_speed')|int(none) }}-{{ states('number.brizer_kitchen_max_fan_speed')|int(none) }}"
                level: info
                logger: custom_components.tion.automation

        # Отключаем признак процесса установки скоростей
        - service: input_boolean.turn_off
          entity_id: input_boolean.brizer_kitchen_set_speed_n_m


    # Обновление элементов интерфейса при изменении диапазона скоростей

    - alias: brizer_kitchen_update_speed_range
      id: brizer_kitchen_update_speed_range
      initial_state: true
      mode: queued
      trigger:
        - platform: state
          entity_id: number.brizer_kitchen_min_fan_speed, number.brizer_kitchen_max_fan_speed
      action:
        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 0 and 0 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed0

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 1 and 1 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed1

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 2 and 2 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed2

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 3 and 3 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed3

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 4 and 4 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed4

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 5 and 5 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed5

        - service_template: >
            {% if states('number.brizer_kitchen_min_fan_speed')|int(-1) <= 6 and 6 <= states('number.brizer_kitchen_max_fan_speed')|int(-1) %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed6

        - service: system_log.write
          data:
            message: >-
              brizer_kitchen_update_speed_range: "{{ states('number.brizer_kitchen_min_fan_speed')|int(none) }}-{{ states('number.brizer_kitchen_max_fan_speed')|int(none) }}"
            level: info
            logger: custom_components.tion.automation


    # Обновление элементов интерфейса при изменении скорости на бризере

    - alias: brizer_kitchen_update_fan_speed
      id: brizer_kitchen_update_fan_speed
      initial_state: true
      mode: queued
      trigger:
        - platform: state
          entity_id: sensor.brizer_kitchen_fan_speed
      condition: "{{ is_state('input_boolean.brizer_kitchen_set_speed_n_m', 'off') and is_state('switch.brizer_kitchen_auto_fan_mode','off') }}"
      action:
        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 0 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed0

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 1 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed1

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 2 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed2

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 3 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed3

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 4 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed4

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 5 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed5

        - service_template: >
            {% if states('sensor.brizer_kitchen_fan_speed')|int(-1) == 6 %}
                input_boolean.turn_on
            {% else %}
                input_boolean.turn_off
            {% endif %}
          entity_id: input_boolean.brizer_kitchen_speed6

        - service: system_log.write
          data:
            message: >-
              brizer_kitchen_update_fan_speed: "{{ states('sensor.brizer_kitchen_fan_speed')|int(none) }}" 
            level: info
            logger: custom_components.tion.automation

